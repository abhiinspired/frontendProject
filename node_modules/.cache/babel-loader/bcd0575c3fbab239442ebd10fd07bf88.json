{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhii\\\\Desktop\\\\BookMovieApp\\\\Final\\\\src\\\\Components\\\\ImageList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageList from '@material-ui/core/ImageList';\nimport ImageListItem from '@material-ui/core/ImageListItem';\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  imageList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)'\n  },\n  title: {\n    color: theme.palette.primary.light\n  },\n  titleBar: {\n    background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n  }\n}));\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const itemData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\n\nexport default function SingleLineImageList() {\n  _s();\n\n  const classes = useStyles();\n\n  async function getMovieList() {\n    try {\n      const rawResponse = await fetch('http://localhost:8085/api/v1/movies?page=1&limit=50');\n      const result = await rawResponse.json();\n\n      if (rawResponse.ok) {\n        console.log(result); //  return result;\n      } else {\n        const error = new Error();\n        error.message = result.message || 'Something went wrong';\n        throw error;\n      }\n    } catch (e) {\n      alert(`Error: ${e.message}`);\n    }\n  }\n\n  const result = getMovieList();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(ImageList, {\n      className: classes.imageList,\n      cols: 2.5,\n      children: result[movies].map(item => /*#__PURE__*/_jsxDEV(ImageListItem, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.img,\n          alt: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageListItemBar, {\n          title: item.title,\n          classes: {\n            root: classes.titleBar,\n            title: classes.title\n          },\n          actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": `star ${item.title}`,\n            children: /*#__PURE__*/_jsxDEV(StarBorderIcon, {\n              className: classes.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, item.img, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleLineImageList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SingleLineImageList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleLineImageList\");","map":{"version":3,"sources":["C:/Users/abhii/Desktop/BookMovieApp/Final/src/Components/ImageList.js"],"names":["React","makeStyles","ImageList","ImageListItem","ImageListItemBar","IconButton","StarBorderIcon","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","imageList","transform","title","color","primary","light","titleBar","SingleLineImageList","classes","getMovieList","rawResponse","fetch","result","json","ok","console","log","error","Error","message","e","alert","movies","map","item","img"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ImageList from '@material-ui/core/ImageList';\r\nimport ImageListItem from '@material-ui/core/ImageListItem';\r\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  imageList: {\r\n    flexWrap: 'nowrap',\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const itemData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\nexport default function SingleLineImageList() {\r\n  const classes = useStyles();\r\n\r\n  async function getMovieList() {\r\n    \r\n    try{\r\n      const rawResponse = await fetch('http://localhost:8085/api/v1/movies?page=1&limit=50');\r\n  \r\n      const result = await rawResponse.json();\r\n\r\n      if(rawResponse.ok){\r\n        console.log(result);\r\n      //  return result;\r\n      }else{\r\n        const error = new Error();\r\n        error.message = result.message || 'Something went wrong';\r\n        throw error;\r\n      }\r\n    }catch(e){\r\n      alert(`Error: ${e.message}`);\r\n    }    \r\n} \r\n\r\nconst result = getMovieList();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ImageList className={classes.imageList} cols={2.5}>\r\n        {result[movies].map((item) => (\r\n          <ImageListItem key={item.img}>\r\n            <img src={item.img} alt={item.title} />\r\n            <ImageListItemBar\r\n              title={item.title}\r\n              classes={{\r\n                root: classes.titleBar,\r\n                title: classes.title,\r\n              }}\r\n              actionIcon={\r\n                <IconButton aria-label={`star ${item.title}`}>\r\n                  <StarBorderIcon className={classes.title} />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </ImageListItem>\r\n        ))}\r\n      </ImageList>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}