{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhii\\\\Desktop\\\\BookMovieApp\\\\Final\\\\src\\\\Components\\\\loginAndRegister.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nconst onRegister = (fname, lname, email, password, contact) => {\n  alert(\"Received\");\n};\n\nexport default function SimpleTabs() {\n  _s();\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const [register, setRegister] = useState({\n    fname: '',\n    lname: '',\n    email: '',\n    password: '',\n    contact: ''\n  });\n\n  const registerChangeHandler = e => {\n    console.log(e); // setRegister(register[e.target.name]) = e.target.value;\n    // console.log(register);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: value,\n        onChange: handleChange,\n        \"aria-label\": \"simple tabs example\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Login\",\n          ...a11yProps(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Register\",\n          ...a11yProps(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: value,\n      index: 0,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          label: \"Username*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          label: \"Password*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\" // onClick={}\n          ,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: value,\n      index: 1,\n      children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n        onSubmit: onRegister,\n        children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n          id: \"fname\",\n          type: \"text\",\n          name: \"fname\",\n          label: \"First Name *\",\n          onChange: registerChangeHandler,\n          validators: ['required'],\n          errorMessages: ['required']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n          id: \"lname\",\n          type: \"text\",\n          name: \"lname\",\n          label: \"Last Name *\",\n          validators: ['required'],\n          errorMessages: ['required']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n          id: \"email\",\n          type: \"email\",\n          name: \"email\",\n          label: \"Email *\",\n          validators: ['required', 'isEmail'],\n          errorMessages: ['required']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n          id: \"password\",\n          type: \"password\",\n          name: \"password\",\n          label: \"Password *\",\n          validators: ['required'],\n          errorMessages: ['required']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n          id: \"contact\",\n          type: \"text\",\n          name: \"contact\",\n          label: \"Contact No *\",\n          validators: ['required'],\n          errorMessages: ['required']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\" // onClick={}\n          ,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimpleTabs, \"TMpWW53ddC0CdV7YF89t9RjV+oE=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = SimpleTabs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"SimpleTabs\");","map":{"version":3,"sources":["C:/Users/abhii/Desktop/BookMovieApp/Final/src/Components/loginAndRegister.js"],"names":["React","useState","PropTypes","makeStyles","AppBar","Tabs","Tab","Typography","Box","Button","TextField","TextValidator","ValidatorForm","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","onRegister","fname","lname","email","password","contact","alert","SimpleTabs","classes","setValue","handleChange","event","newValue","register","setRegister","registerChangeHandler","e","console","log"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst onRegister = (fname, lname, email, password, contact) => {\r\n    alert(\"Received\");\r\n}\r\n\r\n\r\n\r\nexport default function SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const [register,setRegister] = useState({\r\n    fname: '',\r\n    lname: '',\r\n    email: '',\r\n    password: '',\r\n    contact: '',\r\n  });\r\n  \r\n  const registerChangeHandler = (e) => {\r\n    console.log(e);\r\n    // setRegister(register[e.target.name]) = e.target.value;\r\n    // console.log(register);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n          <Tab label=\"Login\" {...a11yProps(0)} />\r\n          <Tab label=\"Register\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <form >\r\n            <TextField id=\"standard-basic\" label=\"Username*\" />\r\n            <TextField id=\"standard-basic\" label=\"Password*\" />\r\n            <br />\r\n            <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                // onClick={}\r\n            >\r\n                Login\r\n            </Button>\r\n        </form>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n          <ValidatorForm onSubmit={onRegister}>\r\n              <TextValidator\r\n                id=\"fname\"\r\n                type=\"text\"\r\n                name=\"fname\"\r\n                label=\"First Name *\"\r\n                onChange = {registerChangeHandler}\r\n                validators={['required']}\r\n                errorMessages={['required']}\r\n              >\r\n              </TextValidator>\r\n              <TextValidator\r\n                id=\"lname\"\r\n                type=\"text\"\r\n                name=\"lname\"\r\n                label=\"Last Name *\"\r\n                validators={['required']}\r\n                errorMessages={['required']}\r\n              >\r\n              </TextValidator>\r\n              <TextValidator\r\n                id=\"email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                label=\"Email *\"\r\n                validators={['required', 'isEmail']}\r\n                errorMessages={['required']}\r\n              >\r\n              </TextValidator>\r\n              <TextValidator\r\n                id=\"password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                label=\"Password *\"\r\n                validators={['required']}\r\n                errorMessages={['required']}\r\n              >\r\n              </TextValidator>\r\n              <TextValidator\r\n                id=\"contact\"\r\n                type=\"text\"\r\n                name=\"contact\"\r\n                label=\"Contact No *\"\r\n                validators={['required']}\r\n                errorMessages={['required']}\r\n              >\r\n              </TextValidator>\r\n            \r\n        <br />\r\n        <Button \r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            // onClick={}\r\n        >\r\n            Register\r\n        </Button>\r\n        </ValidatorForm>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}