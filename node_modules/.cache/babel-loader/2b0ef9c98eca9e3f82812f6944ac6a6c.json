{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhii\\\\Desktop\\\\BookMovieApp\\\\Final\\\\src\\\\Components\\\\ReleasedMoviesList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageList from '@material-ui/core/ImageList';\nimport ImageListItem from '@material-ui/core/ImageListItem';\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  imageList: {\n    width: 500,\n    height: 450\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n}));\nexport default function ReleasedMoviesList() {\n  _s();\n\n  const classes = useStyles();\n  const [result, setResult] = useState([]);\n\n  async function getMovieList() {\n    const rawResponse = await fetch('http://localhost:8085/api/v1/movies?page=1&limit=50');\n    const data = await rawResponse.json();\n    setResult(data.movies);\n  }\n\n  useEffect(() => {\n    getMovieList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(ImageList, {\n      rowHeight: 180,\n      className: classes.imageList,\n      children: [/*#__PURE__*/_jsxDEV(ImageListItem, {\n        cols: 2,\n        style: {\n          height: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(ListSubheader, {\n          component: \"div\",\n          children: \"December\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, \"Subheader\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), result.map(item => /*#__PURE__*/_jsxDEV(ImageListItem, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.poster_url,\n          alt: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageListItemBar, {\n          title: item.title,\n          subtitle: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"by: \", item.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this),\n          actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": `info about ${item.title}`,\n            className: classes.icon,\n            children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, item.img, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReleasedMoviesList, \"qk2ZMDJgqG6nfMSnlgWfBUpZb8I=\", false, function () {\n  return [useStyles];\n});\n\n_c = ReleasedMoviesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReleasedMoviesList\");","map":{"version":3,"sources":["C:/Users/abhii/Desktop/BookMovieApp/Final/src/Components/ReleasedMoviesList.js"],"names":["React","useEffect","useState","makeStyles","ImageList","ImageListItem","ImageListItemBar","ListSubheader","IconButton","InfoIcon","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","imageList","width","height","icon","color","ReleasedMoviesList","classes","result","setResult","getMovieList","rawResponse","fetch","data","json","movies","map","item","poster_url","title","author","img"],"mappings":"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","sourcesContent":["import React, { useEffect, useState }from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ImageList from '@material-ui/core/ImageList';\r\nimport ImageListItem from '@material-ui/core/ImageListItem';\r\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  imageList: {\r\n    width: 500,\r\n    height: 450,\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)',\r\n  },\r\n}));\r\n\r\n\r\nexport default function ReleasedMoviesList() {\r\n  const classes = useStyles();\r\n\r\n  const [result,setResult] = useState([]);\r\n\r\n  async function getMovieList() {    \r\n      const rawResponse = await fetch('http://localhost:8085/api/v1/movies?page=1&limit=50');  \r\n      const data = await rawResponse.json();\r\n      setResult(data.movies);    \r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getMovieList();  \r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ImageList rowHeight={180} className={classes.imageList}>\r\n        <ImageListItem key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n          <ListSubheader component=\"div\">December</ListSubheader>\r\n        </ImageListItem>\r\n        {result.map((item) => (\r\n          <ImageListItem key={item.img}>\r\n            <img src={item.poster_url} alt={item.title} />\r\n            <ImageListItemBar\r\n              title={item.title}\r\n              subtitle={<span>by: {item.author}</span>}\r\n              actionIcon={\r\n                <IconButton aria-label={`info about ${item.title}`} className={classes.icon}>\r\n                  <InfoIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </ImageListItem>\r\n        ))}\r\n      </ImageList>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}