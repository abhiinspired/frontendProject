{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhii\\\\Desktop\\\\BookMovieApp\\\\Final\\\\src\\\\Components\\\\loginAndRegister.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\nimport './loginAndRegistration.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function SimpleTabs() {\n  _s();\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const [register, setRegister] = useState({\n    fname: '',\n    lname: '',\n    email: '',\n    password: '',\n    contact: ''\n  });\n  const [login, setLogin] = useState({\n    userEmail: '',\n    userPassword: ''\n  });\n\n  const registerChangeHandler = e => {\n    const state = register;\n    state[e.target.name] = e.target.value;\n    setRegister({ ...state\n    });\n  };\n\n  const loginChangeHandler = e => {\n    const state = login;\n    state[e.target.name] = e.target.value;\n    setLogin({ ...state\n    });\n  };\n\n  const {\n    fname,\n    lname,\n    email,\n    password,\n    contact\n  } = register;\n  const {\n    userEmail,\n    userPassword\n  } = login;\n\n  async function onRegister() {\n    const details = register;\n    const parms = {\n      email_address: details.email,\n      first_name: details.fname,\n      last_name: details.lname,\n      mobile_number: details.contact,\n      password: details.password\n    };\n\n    try {\n      const rawResponse = await fetch('http://localhost:8085/api/v1/signup', {\n        body: JSON.stringify(parms),\n        method: 'POST',\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json;charset=UTF-8\"\n        }\n      });\n      const result = await rawResponse.json();\n\n      if (rawResponse.ok) {\n        document.querySelector(\".registrationStatus\").style.display = \"block\";\n        setRegister({\n          fname: '',\n          lname: '',\n          email: '',\n          password: '',\n          contact: ''\n        });\n      } else {\n        const error = new Error();\n        error.message = result.message || 'Something went wrong';\n        throw error;\n      }\n    } catch (e) {\n      alert(`Error: ${e.message}`);\n    }\n  }\n\n  function onLogin() {\n    alert(\"Login Clicked\");\n    console.log(login);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: value,\n        onChange: handleChange,\n        \"aria-label\": \"simple tabs example\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Login\",\n          ...a11yProps(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Register\",\n          ...a11yProps(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: value,\n      index: 0,\n      children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n        onSubmit: onLogin,\n        children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n          id: \"userEmail\",\n          type: \"email\",\n          name: \"userEmail\",\n          label: \"Username*\",\n          onChange: loginChangeHandler,\n          value: userEmail,\n          validators: ['required', 'isEmail'],\n          errorMessages: ['required']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n          id: \"userPassword\",\n          type: \"password\",\n          name: \"userPassword\",\n          label: \"Password*\",\n          onChange: loginChangeHandler,\n          value: userPassword,\n          validators: ['required'],\n          errorMessages: ['required']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: value,\n      index: 1,\n      children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n        onSubmit: onRegister,\n        children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n          id: \"fname\",\n          type: \"text\",\n          name: \"fname\",\n          label: \"First Name *\",\n          onChange: registerChangeHandler,\n          value: fname,\n          validators: ['required'],\n          errorMessages: ['required']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n          id: \"lname\",\n          type: \"text\",\n          name: \"lname\",\n          label: \"Last Name *\",\n          onChange: registerChangeHandler,\n          value: lname,\n          validators: ['required'],\n          errorMessages: ['required']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n          id: \"email\",\n          type: \"email\",\n          name: \"email\",\n          label: \"Email *\",\n          onChange: registerChangeHandler,\n          value: email,\n          validators: ['required', 'isEmail'],\n          errorMessages: ['required']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n          id: \"password\",\n          type: \"password\",\n          name: \"password\",\n          label: \"Password *\",\n          onChange: registerChangeHandler,\n          value: password,\n          validators: ['required'],\n          errorMessages: ['required']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n          id: \"contact\",\n          type: \"text\",\n          name: \"contact\",\n          label: \"Contact No *\",\n          onChange: registerChangeHandler,\n          value: contact,\n          validators: ['required'],\n          errorMessages: ['required']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"registrationStatus\",\n          children: \"Registration Successfull. Please login!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimpleTabs, \"MEh46+P1FMwqsC6bURXs4k0rh9o=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = SimpleTabs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"SimpleTabs\");","map":{"version":3,"sources":["C:/Users/abhii/Desktop/BookMovieApp/Final/src/Components/loginAndRegister.js"],"names":["React","useEffect","useState","PropTypes","makeStyles","AppBar","Tabs","Tab","Typography","Box","Button","TextField","TextValidator","ValidatorForm","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","SimpleTabs","classes","setValue","handleChange","event","newValue","register","setRegister","fname","lname","email","password","contact","login","setLogin","userEmail","userPassword","registerChangeHandler","e","state","target","name","loginChangeHandler","onRegister","details","parms","email_address","first_name","last_name","mobile_number","rawResponse","fetch","body","JSON","stringify","method","headers","result","json","ok","document","querySelector","style","display","error","Error","message","alert","onLogin","console","log"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\r\nimport './loginAndRegistration.css'\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const [register,setRegister] = useState({\r\n    fname: '',\r\n    lname: '',\r\n    email: '',\r\n    password: '',\r\n    contact: '',\r\n  });\r\n\r\n  const [login, setLogin] = useState({\r\n    userEmail:'',\r\n    userPassword:''\r\n  })\r\n  \r\n  const registerChangeHandler = (e) => {\r\n    const state = register;\r\n    state[e.target.name] = e.target.value;\r\n    setRegister({...state});\r\n  }\r\n\r\n  const loginChangeHandler = (e) => {\r\n    const state = login;\r\n    state[e.target.name] = e.target.value;\r\n    setLogin({...state});\r\n  }\r\n\r\n  const {fname,lname,email,password,contact} = register;\r\n  const {userEmail, userPassword} = login;\r\n\r\n  async function onRegister() {\r\n\r\n    const details = register;\r\n    \r\n    const parms = {\r\n      email_address: details.email,\r\n      first_name: details.fname,\r\n      last_name: details.lname,\r\n      mobile_number: details.contact,\r\n      password: details.password\r\n    };\r\n\r\n    try{\r\n      const rawResponse = await fetch('http://localhost:8085/api/v1/signup',{\r\n        body: JSON.stringify(parms),\r\n        method: 'POST',\r\n        headers: {\r\n          \"Accept\": \"application/json\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\"\r\n        }\r\n      });\r\n  \r\n      const result = await rawResponse.json();\r\n\r\n      if(rawResponse.ok){\r\n        document.querySelector(\".registrationStatus\").style.display = \"block\";\r\n        setRegister({\r\n          fname: '',\r\n          lname: '',\r\n          email: '',\r\n          password: '',\r\n          contact: '',\r\n        });\r\n      }else{\r\n        const error = new Error();\r\n        error.message = result.message || 'Something went wrong';\r\n        throw error;\r\n      }\r\n    }catch(e){\r\n      alert(`Error: ${e.message}`);\r\n    }    \r\n}    \r\n\r\nfunction onLogin(){\r\n  alert(\"Login Clicked\");\r\n  console.log(login);\r\n}\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n          <Tab label=\"Login\" {...a11yProps(0)} />\r\n          <Tab label=\"Register\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <ValidatorForm onSubmit={onLogin}>\r\n\r\n        <TextValidator\r\n                id=\"userEmail\"\r\n                type=\"email\"\r\n                name=\"userEmail\"\r\n                label=\"Username*\"\r\n                onChange = {loginChangeHandler}\r\n                value={userEmail}\r\n                validators={['required', 'isEmail']}\r\n                errorMessages={['required']}\r\n              >\r\n              </TextValidator>\r\n              <TextValidator\r\n                id=\"userPassword\"\r\n                type=\"password\"\r\n                name=\"userPassword\"\r\n                label=\"Password*\"\r\n                onChange = {loginChangeHandler}\r\n                value={userPassword}\r\n                validators={['required']}\r\n                errorMessages={['required']}\r\n              >\r\n              </TextValidator>\r\n\r\n            <br />\r\n            <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                type=\"submit\"\r\n            >\r\n                Login\r\n            </Button>\r\n        </ValidatorForm>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n          <ValidatorForm onSubmit={onRegister}>\r\n              <TextValidator\r\n                id=\"fname\"\r\n                type=\"text\"\r\n                name=\"fname\"\r\n                label=\"First Name *\"\r\n                onChange = {registerChangeHandler}\r\n                value = {fname}\r\n                validators={['required']}\r\n                errorMessages={['required']}\r\n              >\r\n              </TextValidator>\r\n              <TextValidator\r\n                id=\"lname\"\r\n                type=\"text\"\r\n                name=\"lname\"\r\n                label=\"Last Name *\"\r\n                onChange = {registerChangeHandler}\r\n                value={lname}\r\n                validators={['required']}\r\n                errorMessages={['required']}\r\n              >\r\n              </TextValidator>\r\n              <TextValidator\r\n                id=\"email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                label=\"Email *\"\r\n                onChange = {registerChangeHandler}\r\n                value={email}\r\n                validators={['required', 'isEmail']}\r\n                errorMessages={['required']}\r\n              >\r\n              </TextValidator>\r\n              <TextValidator\r\n                id=\"password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                label=\"Password *\"\r\n                onChange = {registerChangeHandler}\r\n                value={password}\r\n                validators={['required']}\r\n                errorMessages={['required']}\r\n              >\r\n              </TextValidator>\r\n              <TextValidator\r\n                id=\"contact\"\r\n                type=\"text\"\r\n                name=\"contact\"\r\n                label=\"Contact No *\"\r\n                onChange = {registerChangeHandler}\r\n                value={contact}\r\n                validators={['required']}\r\n                errorMessages={['required']}\r\n              >\r\n              </TextValidator>\r\n              <p className=\"registrationStatus\" >Registration Successfull. Please login!</p>\r\n        <br />\r\n        <Button \r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n            type=\"submit\"\r\n        >\r\n            Register\r\n        </Button>\r\n        </ValidatorForm>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}