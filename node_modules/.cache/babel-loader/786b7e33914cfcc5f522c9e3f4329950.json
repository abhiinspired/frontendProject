{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhii\\\\Desktop\\\\BookMovieApp\\\\Final\\\\src\\\\Components\\\\ImageList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageList from '@material-ui/core/ImageList';\nimport ImageListItem from '@material-ui/core/ImageListItem';\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  imageList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)'\n  },\n  title: {\n    color: theme.palette.primary.light\n  },\n  titleBar: {\n    background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n  }\n}));\nexport default function SingleLineImageList() {\n  _s();\n\n  const classes = useStyles();\n  const [result, setResult] = useState([]);\n\n  async function getMovieList() {\n    const rawResponse = await fetch('http://localhost:8085/api/v1/movies?page=1&limit=50');\n    const data = await rawResponse.json();\n    setResult(data.movies);\n  }\n\n  useEffect(() => {\n    getMovieList();\n  }, []);\n\n  function tileItems(item) {\n    return /*#__PURE__*/_jsxDEV(ImageListItem, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.poster_url,\n        alt: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(ImageListItemBar, {\n        title: item.title,\n        classes: {\n          root: classes.titleBar,\n          title: classes.title\n        },\n        actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": `star ${item.title}`,\n          children: /*#__PURE__*/_jsxDEV(StarBorderIcon, {\n            className: classes.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this)]\n    }, item.img, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(ImageList, {\n      className: classes.imageList,\n      cols: 8,\n      children: result.map(tileItems)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleLineImageList, \"qk2ZMDJgqG6nfMSnlgWfBUpZb8I=\", false, function () {\n  return [useStyles];\n});\n\n_c = SingleLineImageList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleLineImageList\");","map":{"version":3,"sources":["C:/Users/abhii/Desktop/BookMovieApp/Final/src/Components/ImageList.js"],"names":["React","useEffect","useState","makeStyles","ImageList","ImageListItem","ImageListItemBar","IconButton","StarBorderIcon","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","imageList","transform","title","color","primary","light","titleBar","SingleLineImageList","classes","result","setResult","getMovieList","rawResponse","fetch","data","json","movies","tileItems","item","poster_url","img","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,cAAc,EAAE,cAHZ;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AALtC,GADiC;AAQvCC,EAAAA,SAAS,EAAE;AAETP,IAAAA,QAAQ,EAAE,QAFD;AAGT;AACAQ,IAAAA,SAAS,EAAE;AAJF,GAR4B;AAcvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEb,KAAK,CAACO,OAAN,CAAcO,OAAd,CAAsBC;AADxB,GAdgC;AAiBvCC,EAAAA,QAAQ,EAAE;AACRR,IAAAA,UAAU,EACR;AAFM;AAjB6B,CAAZ,CAAD,CAA5B;AAwBA,eAAe,SAASS,mBAAT,GAA+B;AAAA;;AAC5C,QAAMC,OAAO,GAAGnB,SAAS,EAAzB;AACA,QAAM,CAACoB,MAAD,EAAQC,SAAR,IAAqB5B,QAAQ,CAAC,EAAD,CAAnC;;AAEA,iBAAe6B,YAAf,GAA8B;AAC1B,UAAMC,WAAW,GAAG,MAAMC,KAAK,CAAC,qDAAD,CAA/B;AACA,UAAMC,IAAI,GAAG,MAAMF,WAAW,CAACG,IAAZ,EAAnB;AACAL,IAAAA,SAAS,CAACI,IAAI,CAACE,MAAN,CAAT;AACH;;AAGDnC,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASM,SAAT,CAAmBC,IAAnB,EAAwB;AACtB,wBAAO,QAAC,aAAD;AAAA,8BACG;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACC,UAAf;AAA2B,QAAA,GAAG,EAAED,IAAI,CAAChB;AAArC;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,gBAAD;AACG,QAAA,KAAK,EAAEgB,IAAI,CAAChB,KADf;AAEI,QAAA,OAAO,EAAE;AACRX,UAAAA,IAAI,EAAEiB,OAAO,CAACF,QADN;AAEVJ,UAAAA,KAAK,EAAEM,OAAO,CAACN;AAFL,SAFb;AAMC,QAAA,UAAU,eACX,QAAC,UAAD;AAAY,wBAAa,QAAOgB,IAAI,CAAChB,KAAM,EAA3C;AAAA,iCACE,QAAC,cAAD;AAAgB,YAAA,SAAS,EAAEM,OAAO,CAACN;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA,OAAoBgB,IAAI,CAACE,GAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AAeD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACjB,IAAxB;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEiB,OAAO,CAACR,SAA9B;AAAyC,MAAA,IAAI,EAAE,CAA/C;AAAA,gBACGS,MAAM,CAACY,GAAP,CAAWJ,SAAX;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAxCuBV,mB;UACNlB,S;;;KADMkB,mB","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ImageList from '@material-ui/core/ImageList';\r\nimport ImageListItem from '@material-ui/core/ImageListItem';\r\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  imageList: {\r\n    \r\n    flexWrap: 'nowrap',\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n}));\r\n\r\n\r\nexport default function SingleLineImageList() {\r\n  const classes = useStyles();\r\n  const [result,setResult] = useState([]);\r\n\r\n  async function getMovieList() {    \r\n      const rawResponse = await fetch('http://localhost:8085/api/v1/movies?page=1&limit=50');  \r\n      const data = await rawResponse.json();\r\n      setResult(data.movies);    \r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getMovieList();  \r\n  }, [])\r\n\r\n  function tileItems(item){\r\n    return <ImageListItem key={item.img}>\r\n              <img src={item.poster_url} alt={item.title}/>\r\n              <ImageListItemBar\r\n                 title={item.title}\r\n                  classes={{\r\n                   root: classes.titleBar,\r\n                 title: classes.title,\r\n                  }}\r\n               actionIcon={\r\n              <IconButton aria-label={`star ${item.title}`}>\r\n                <StarBorderIcon className={classes.title} />\r\n               </IconButton>\r\n              }\r\n             />\r\n          </ImageListItem>\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ImageList className={classes.imageList} cols={8}>\r\n        {result.map(tileItems)}\r\n      </ImageList>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n "]},"metadata":{},"sourceType":"module"}